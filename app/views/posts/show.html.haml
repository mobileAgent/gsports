%script{"type"=>"text/javascript", "src"=>"http://www.plaxo.com/css/m/js/util.js"}
%script{"type"=>"text/javascript", "src"=>"http://www.plaxo.com/css/m/js/basic.js"}
%script{"type"=>"text/javascript", "src"=>"http://www.plaxo.com/css/m/js/abc_launcher.js"}
- @section = (@post.category && @post.category.name)

#yui-main
  .yui-b
    .box.hfeed
      %h3= "#{@user.full_name}'s Blog"
      .hentry.main
        %h4.entry-title= link_to @post.title, user_post_path(@user, @post), :rel => 'bookmark'
        .vcard.author
          %ul
            %li.update
              %a{"href"=>"#{user_post_path(@user, @post)}", "rel"=>"bookmark"}
                %abbr.published{"title"=>"#{@post.published_at}"}= @post.published_at_display("%B %d, %Y")
            %li.view= "views (#{@post.view_count})"
            %li.comments= link_to "comments (#{@post.comments.size})", user_post_path(@user, @post)+'#comments'      
            - if current_user and current_user.can_request_friendship_with(@post.user)
              %li.addfriend= add_friend_link(@post.user)
            %li.print
              %a{"href"=>"#", :onclick=>"window.print(); return false;", :title=>"Print this story"} Print
            -if @is_current_user || admin? || moderator?
              %li.edit= link_to "Edit", edit_user_post_path(@post.user, @post)
              %li.delete= link_to "Delete", user_post_path(@post.user, @post), {:method => :delete, :confirm => 'Permanently delete this post?'}

              
        / vcard
        .entry-content
          = @post.post
          - unless @post.tags.empty?
            %ul.tags
              - @post.tags.each do |t|
                %li=link_to( t.name, tag_url(t.name), :rel => 'tag')
        / entry-content
      / ends hentry
    #comments.box.hfeed.comments
      %h3 Post Comments
      %h2 Add Your Comment!
      %p= render :partial => 'comments/comment_form', :locals => {:commentable => @post}
      %a#newest_comment
      = render :partial => 'comments/comment', :collection => @comments
      %span#more_comments_links= more_comments_links(@post)
    / ends box
  / yui-b
/ ends yui-main

.yui-b
  =render :partial => 'author_profile', :locals => {:user => @user}

  - unless @related.empty?
    .box.alt
      %h3 Related Posts
      %ul.list.page
        - @related.each do |post|
          %li=link_to truncate(post.title, 75), user_post_path(post.user, post)      

  - unless @popular_posts.empty?
    .box.alt
      %h3 Popular Posts
      %ul.list.page
        - @popular_posts.each do |post|
          %li=link_to truncate(post.title, 75), user_post_path(post.user, post)      
/ sidebar

%script{:type=>"text/javascript", :charset=>"utf-8"}
  = remote_function :url => {:controller => 'posts', :action => 'update_views', :user_id => @post.user, :id => @post}, :method => :put
