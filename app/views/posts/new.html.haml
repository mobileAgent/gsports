- @section = 'blog'

.profileContentArea
  .profilePageHeader
    %h2.columnDescriptor
      %span
        =link_to _('BLOG'), user_posts_path(@user.id)
      = @user.full_name

  .forumContainer
    - if @post.contest || @post.category
      .contentBox.tanBackground
        .contentBoxHeader.yellowHeader
          %h2.boxDescription
            = _('Category')
        .contentBoxContent
          - if @post.contest
            = render :partial => "contest"
          - elsif @post.category
            = render :partial => "/categories/tips", :locals => {:category => @post.category}
          - else
            = render :partial => "/categories/tips", :locals => {:category => nil}
          %br.clear


    .contentBox.tanBackground
      .contentBoxHeader.yellowHeader
        %h2.boxDescription
          = _('New post')
      .contentBoxContent
  
        = error_messages_for :post

        - form_for(:post, :url => user_posts_path, :html => {:class => "MainForm"}) do |f|			
          %label
            Category:
          %select{:id=>"post_category_id", :name=>"post[category_id]"}
            -for category in Category.find(:all)
              %option{:value=>"#{category.id}", :selected => category.id == @post.category_id }= h(category.name)
  
          %label
            Title 
            %em (required)
          = f.text_field :title, :size => 75
  
          %label
            Body Text 
            %em (required)
          = f.text_area :raw_post, :style => "width:100%;"
  
          %label
            Tags 
            %em (optional keywords describing this post, separated by commas)
          = text_field_tag 'tag_list', @post.tags.collect{|t| t.name}.join(", "), {:autocomplete => "off", :size => 35}
          .auto_complete#tag_list_auto_complete
            = auto_complete_field 'tag_list', {:url => { :controller => "tags", :action => 'auto_complete_for_tag_name'}, :tokens => [',']  }
          
          %label
            Save post as: 
          = f.select(:published_as, [['Published', 'live'], ['Draft', 'draft']])
          
          %p
            = submit_tag "Save"
          %p
            or 
            = link_to 'cancel and go back to my posts', user_posts_path(@user)
  
    = observe_field  "post_category_id", {:url => {:controller => 'categories', :action => 'show_tips'}, :with => "id", :update => "category_tips", :complete => visual_effect(:highlight, "category_tips", :duration => 0.5)}

