-thread |= @thread
- if !thread
  - mthread = Message.message_thread(message)
  - if mthread.size > 1
    - unread_count = mthread.unread(current_user.id).size
- thread_unread = unread_count && unread_count > 0

.mailItem{:id => "message_#{message.id}"}
  .mailSenderSelect
    -#
      %input{ :name => "mailSelct", :type => "checkbox", :value => message.id, :onchange => "selectThisMessage(this)" }/
  .mailPoster
    %span.mailPosterImg
      %a{:href=>"#{user_path(message.sender)}", :class=>"photo"}
        =image_tag(message.sender.avatar_photo_url(:thumb), :alt=>"Profile Picture", :width=>"80", :height=>"80")
    = link_to message.sender.full_name, user_path(message.sender)
  .mailPostSummary
    .mailPostSummaryDate
      =human_date_time(message.created_at)
    %p
      - if !thread
        %p
          %strong
            - if message.recipient.id != current_user.id
              To:
              = h(message.recipient.full_name)
              %br
            Subject: 
            = truncate(h(message.title),85)
            %br
    %br
    = render :partial => "message_body", :locals => {:message_body => message, :summary => true, :thread_unread => thread_unread}

    - if mthread && mthread.size > 1
      .mailReadMessage 
        = link_to "read thread of #{mthread.size} messages &raquo;" + (unread_count > 0 ? " (#{unread_count} unread)" : ""), :action => :thread, :id => message.real_thread_id

  .forumActions
    - if !thread && message.from_id != current_user.id
      = link_to 'Reply', url_for({ :controller => 'messages', :action => 'new', :re => message.id }), :class => 'genericButton'
      %br
    - if message.to_id == current_user.id
      = link_to_remote 'Delete', {:url => { :controller => 'messages', :action => 'destroy', :id => message}, :method => :delete}, :class => 'genericButton'
      %br
      = render :partial => 'shared/inappropriate_item', :locals => {:item => message}
  .clearDiv
