- @section = 'forums'
- @page_title = @topic.title
- @monitoring = logged_in? && current_user.monitoring_topic?(@topic)

.forumContentArea.listingPage
  .profilePageHeader
    %h2.columnDescriptor
      %span
        =link_to _('FORUMS'), forums_path
      = link_to h(@topic.forum.name), forum_path(@topic.forum)    
  .forumContainer
    .forumContentBox
      .forumBoxHeader    
        %h2
          = h @topic.title
          - if @topic.locked?
            %span= _('(locked)')            

        -# COMMENT OUT WATCH TOPIC SECTION
          - if logged_in?
            #monitor_topic
              - form_tag forum_topic_monitorship_path(@forum, @topic), :style => 'margin-top:0em; float:right;' do
                %input#monitor_checkbox{:type=>"checkbox", :checked=> @monitoring, :onclick=>"monitor_click()"}
                %label#monitor_label{"for"=>"monitor_checkbox"}                
                  = "Watch#{@monitoring ? 'ing' : ''}"
                  = _('topic')
                = hidden_field_tag '_method', 'delete' if @monitoring
                = submit_tag :Set, :id => 'monitor_submit' 
              
              / This is already ajax... so why do we need the SET button? 
              %script{:type => 'text/javascript'}
                function monitor_click(){
                if (this.checked) {
                = remote_function :url => forum_topic_monitorship_path(@forum, @topic)
                } else {
                = remote_function :url => forum_topic_monitorship_path(@forum, @topic), :method => :delete
                }}
      .clear

      - if logged_in?
        - if @topic.editable_by?(current_user)
          %table
            %tr
              %td{ :width => "50%" }
                = link_to _('Edit Topic'), edit_forum_topic_path(@forum, @topic), :class => 'genericButton'
              %td{ :width => "50%" }
                = link_to _('Delete Topic'), forum_topic_path(@forum, @topic), :method => :delete, :confirm => _('Delete this topic forever?'), :class => 'genericButton'
          %br

      -# COMMENT OUT TOPIC STATS 
        %p.subtitle
          = feed_icon_tag @topic.title, formatted_forum_topic_path(@forum, @topic, :rss)
          = "#{pluralize @topic.sb_posts.count, 'post'}, #{pluralize @topic.voices, 'voice'}"
          = ", Tagged: #{@topic.tags.collect{|t| link_to( h(t.name), tag_url(t.name), :class => 'tag') }.join(", ")}" unless @topic.tags.empty?

      .forumTags
        = "#{_('Tagged')}: #{@topic.tags.collect{|t| link_to( h(t.name), tag_url(t.name) ) }.join(", ")}" unless @topic.tags.empty?
      .forumVoices
        = "#{_('Voices')}: #{@voices.collect{|user| link_to( h(user.full_name), user_path(user) ) }.join(", ")}" unless @voices.empty?
    
      - if @post_pages.page_count > 1
        .pagination= pagination_links @post_pages, :window_size => 10
    
      %a{"name"=>"#{@posts.first.dom_id}", "id"=>"#{@posts.first.dom_id}"} &nbsp;
      %br.clear
      %br
            
      - for post in @posts do
        .forumPost{:id => "topic_post_#{post.id}"}
          %a{ :name => post.dom_id }
          .forumPoster
            %a{:href=>"#{user_post_path(post.user, post)}"}
              =image_tag(post.user.avatar_photo_url(:thumb), :alt=>"image")
            %div
              = link_to truncate(h(post.user.full_name), 15), user_path(post.user), :class => (post.user == @posts.first.user ? "admin" : nil) 
          .forumPostSummary
            .forumPostSummaryDate
              %abbr.updated{"title"=>"#{post.created_at.xmlschema}"}= time_ago_in_words(post.created_at)                  
            .forumPostSummaryBody
              = post.body_html
          .forumActions
            - if post.user_id == current_user.id || current_user.admin?
              -# AJAX post deletion causes problems with deleting the LAST post
              -# = link_to_remote _('Delete Post'), {:url => sb_post_path(:forum_id => post.forum_id, :topic_id => post.topic_id, :id => post.id, :page => params[:page]), :method => :delete, 500 => 'alert(\'Sorry, there was a server error\'); return false', :success => visual_effect(:fade, "forum_post_#{post.id}"), :confirm => _('Are you sure you want to permanently delete this post'), :html => {:class => 'genericButton'} }
              = link_to _('Delete Post'), sb_post_path(:forum_id => post.forum_id, :topic_id => post.topic_id, :id => post.id, :page => params[:page]), :method => :delete, :confirm => _('Are you sure you want to permanently delete this post'), :class => 'genericButton'
            - else
              = render :partial => 'shared/inappropriate_item', :locals => {:item => post}
          %br/
          .clearDiv

      %div
      \&nbsp;
      %br/

      - if @post_pages.page_count > 1
        .pagination= pagination_links @post_pages, :window_size => 10
    
      - if logged_in?
        #edit
        - if @topic.locked?
          %p
            = image_tag "clearbits/lock.gif", :class => "icon grey", :title => "Topic locked", :plugin => "community_engine"
            %label= _('This topic is locked.')
        - else
          %p
            = link_to_function _('Reply to topic'), "ReplyForm.init()", :class => "genericButton"

            #reply.editbox
              .container
                = content_tag 'p', h(flash[:bad_reply]), :class => 'notice' if flash[:bad_reply]
      
                - form_for :post, :url => sb_posts_path(:forum_id => @forum, :topic_id => @topic, :page => @topic.last_page) do |f|
                  %table{"cellspacing"=>"0", "border"=>"0", "cellpadding"=>"0", "width"=>"100%"}
                    %tr
                      %td{"rowspan"=>"2", "width"=>"70%"}
                        = f.text_area :body, :style => "width: 99%"
                      %td{"style"=>"vertical-align:top;"}
                        = submit_tag _("Save Reply")
                        %span.button_or= "or #{link_to_function _('cancel'), "$('reply').hide()"}"
                    %tr
                      %td{"style"=>"vertical-align: bottom; padding-bottom:15px;"}
      
          = javascript_tag "$('reply').hide();"
      - else
        %p= link_to _('Log in to reply to this topic'), new_forum_topic_post_path(@topic.forum, @topic), :class => "utility"

      %br.clear
      %br
      = link_to _("Forums"), forum_home_path
      %span.arrow &rarr;
      = link_to h(@topic.forum.name), forum_path(@topic.forum)
      %span.arrow &rarr;
      = h @topic.title
  
%script{"type"=>"text/javascript", "charset"=>"utf-8"}
  Event.observe(window, 'load', function(){
  if(document.location.href.include('#reply-form')){
  ReplyForm.init();
  }
  })