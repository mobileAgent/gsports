= f.error_messages
= error_messages_for :access_item
  
- autofill_title = @video_asset.nil? || @video_asset.title.nil? || @video_asset.title.blank?
%script
  function autofill_video_title() {
  if (document.getElementById('autofill').checked)
  return generate_video_title();
  }
%p
  = render :partial => 'permissions/scope_selector', :locals => { :auto_submit=>false, :select_first=>true }

%p
  = f.label :sport
  %br/
  - sports = @quickfind_sports.clone
  - sports << VideoAsset.new({:id=>-1,:sport=>'Other'})
  - select_proc = lambda { |s| s.sport == @video_asset.sport }
  = collection_select(:video_asset,:sport,sports,"sport","sport",{:prompt => "-Select-", :selected => select_proc}, {:id => 'video_asset_sport_select', :name => 'video_asset_sport_select', :onchange=>'javascript:gs.video_assets.select_sport()'})
  = text_field_with_auto_complete :video_asset, :sport, :autocomplete => "off", :onchange => "javascript:autofill_video_title(); return true;", :style=>'display:none'

%p
  = f.label "Game Date"
  %br/
  %em= "Formats: (yyyy-mm-dd, yyyy-mm, yyyy, yyyy-yyyy)"
  %br/
  = text_field :video_asset, :game_date, :value => @video_asset.game_date_string, :onchange => "javascript:autofill_video_title(); return true;"
  
%p
  %table
    %tr
      %td
        %p
          %label{:for=>"video_asset[home_team_name]"} Home Team (Our Team)
          %br/
          = text_field_with_auto_complete :video_asset, :home_team_name, :autocomplete => "off", :onchange => "javascript:autofill_video_title(); return true;"
      %td &nbsp;
      %td
        %p
          %label{:for=>"video_asset[home_score]"} Score
          %br/
          = text_field :video_asset, :home_score, :value => @video_asset.home_score, :size=>3, :onchange => "javascript:autofill_video_title(); return true;"
    %tr
      %td
        %p
          %label{:for=>"video_asset[visiting_team_name]"} Opponent
          %br/
          = text_field_with_auto_complete :video_asset, :visiting_team_name, :autocomplete => "off", :onchange => "javascript:autofill_video_title(); return true;"
      %td &nbsp;
      %td
        %p
          %label{:for=>"video_asset[visitor_score]"} Score
          %br/        
          = text_field :video_asset, :visitor_score, :value => @video_asset.visitor_score, :size=>3, :onchange => "javascript:autofill_video_title(); return true;"

%p
  %table
    %tr
      %td
        %p
          %label{:for=>"video_asset[game_gender]"} Boys/Girls
          %br/
          = collection_select("video_asset","game_gender",VideoAsset.GAME_GENDERS,"to_s","to_s",{:prompt => "-Select-",  :selected => @video_asset.game_gender }, { :onchange => "javascript:autofill_video_title(); return true;" } )
      %td &nbsp;
      %td
        %p
          %label{:for=>"video_asset[game_level]"} Level
          %br/
          - game_levels = @video_asset.game_level_choices.clone
          - game_levels << 'Other'
          = collection_select("video_asset","game_level",game_levels, "to_s","to_s", { :prompt => "-Select-", :selected => @video_asset.game_level}, {:style => "width: 115px", :id => 'video_asset_game_level_select', :name=>'video_asset_game_level_select', :onchange=>'javascript:gs.video_assets.select_game_level()'})
          = text_field :video_asset, :game_level, :size=>12, :onchange => "javascript:autofill_video_title(); return true;", :style => "display:none"
          -#%script
            var z=dhtmlXComboFromSelect("video_asset_game_level");
      %td &nbsp;
      %td
        %p
          %label{:for=>"video_asset[game_type]"} Game Type
          %br/
          - game_types = @video_asset.game_type_choices.clone
          - game_types << 'Other'
          = collection_select("video_asset","game_type", game_types, "to_s","to_s", {:prompt => "-Select-", :selected => @video_asset.game_type},{:style => "width: 115px", :id => 'video_asset_game_type_select', :name=>'video_asset_game_type_select', :onchange=>'javascript:gs.video_assets.select_game_type()'})
          = text_field :video_asset, :game_type, :size=>12, :onchange => "javascript:autofill_video_title(); return true;", :style => "display:none"

      
      - access_groups = AccessGroup.for_team(current_user.team)
      - if access_groups.size > 0
        %td &nbsp;
        %td
          %p
            %label{:for=>"access_item[id]"} Access Group
            %br/
            = collection_select :access_item, :access_group_id, access_groups, :id, :name, {:prompt => "-Select-"}
         
            

%p
  %br/
  =f.check_box :public_video
  =f.label(:public_video,  'Public Video')
  = "&nbsp; | &nbsp;"
  =f.check_box :missing_audio
  =f.label(:missing_audio, "This video has <strong>no</strong> audio")
  %br/
  %br/
  
%p
  = f.label :title
  %input#autofill{:type => 'checkbox', :name => 'autofill', :checked => autofill_title, :onclick => 'autofill_video_title()', :value => 1}
  Auto-fill
  %br/
  = f.text_field :title, :size => 85, :onkeydown => 'disable_autofill_video_title();return true'

%p
  = f.label :description
  %br/
  = f.text_area :description, :rows => 3, :cols => 75

%p
  %label{ :for => "video_asset_filmed_by_name" } Filmed By
  %br/
  = f.text_field :filmed_by_name, :size => 35

%p
  %label{ :for => "video_asset_announcer_name" } Announcer
  %br/
  = f.text_field :announcer_name, :size => 35

%p
  =f.label :tags
  %br/
  = text_field_tag 'tag_list', @video_asset.tags.collect{|t| t.name}.join(", "), {:autocomplete => "off", :size => 35}
  #tag_list_auto_complete.auto_complete
  = auto_complete_field 'tag_list', {:url => { :controller => "tags", :action => 'auto_complete_for_tag_name'}, :tokens => [',']  }

- if current_user.admin?
  %fieldset.emphasized
    %legend="Advanced Fields (Admin Only)"
    %p
      %label{:for=>"video_asset[gsan]"} GSAN
      %br/
      = f.text_field :gsan
    %p
      %label{:for=>"video_asset[internal_notes]"} Internal Use Only
      %br/
      = f.text_area :internal_notes, :rows => 3, :cols => 65
      
    %p
      = f.label :league_name
      %br/
      = text_field_with_auto_complete :video_asset, :league_name, :autocomplete => "off"
    %p
      = f.label :team_name
      %br/
      = text_field_with_auto_complete :video_asset, :team_name, :autocomplete => "off"

  %fieldset.emphasized
    %legend="Very Advanced Fields (Vidavee Coordination, Admin Only)"
    %p
      = f.label :dockey
      %br/
      = f.text_field :dockey, :size => 32
    %p
      = f.label :video_length
      %br/
      = f.text_field :video_length
    %p
      = f.label :video_type
      %br/
      = f.text_field :video_type
    %p
      = f.label :video_status
      %br/
      = f.text_field :video_status
