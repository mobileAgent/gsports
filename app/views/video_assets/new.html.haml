%h1 Upload a new video

- form_for(:video_asset, @video_asset,:html => {:multipart => true}, :url => {:controller => 'video_assets' , :action => 'save_video'}, :html => {:id => 'upload_form', :onsubmit => 'return doSubmit();' } ) do |f|
  = render :partial => "form", :locals => { :f => f }
  %p
    <input type="hidden" name="hidFileID" id="hidFileID" value="" />
    <label for="uploaded_file_path">Selected File:</label>
    %br/
    <input type="text" id="uploaded_file_path" disabled="disabled" style="border: solid 1px; background-color: #FFFFFF;" />
    - session_key = (ActionController::Base.session.first[:session_key] || '_session_id').to_sym
    %script{:type=>'text/javascript'}
      var uploader;
      window.onload = function (){
      ="uploader = new GSports.SwfUpload('#{swfupload_new_video_asset_path(session_key => session.session_id)}','#{Vidavee.legal_file_extensions.join(";")}');"
      };
      
  %div{:style=>"margin: 0px 10px;", :id => "flashUI"}
    %div
      %p
        %button{:id=>"btnBrowse", :type=>"button", :style=>"padding: 5px;", :onclick=>"uploader.swfu.selectFile(); this.blur();"}
          =image_tag '/icons/add.png', :plugin => 'community_engine'
          Browse Video Files
      %label
        %em
          You can select only one file
          %br
          = (AppConfig.video_asset['attachment_fu_options']['max_size'])
          megabyte upload limit per file.                
    #uploadProgressContainer

  %p
    = f.submit "Upload"

